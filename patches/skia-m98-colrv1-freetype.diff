diff --git a/src/ports/SkFontConfigTypeface.h b/src/ports/SkFontConfigTypeface.h
index 8ad4e02..59bd6a2 100644
--- a/src/ports/SkFontConfigTypeface.h
+++ b/src/ports/SkFontConfigTypeface.h
@@ -12,6 +12,8 @@
 #include "include/core/SkStream.h"
 #include "include/ports/SkFontConfigInterface.h"
 #include "src/core/SkFontDescriptor.h"
+enum class FT_Color_Root_Transform_;
+typedef FT_Color_Root_Transform_ FT_Color_Root_Transform; /* freetype/ftcolor.h */
 #include "src/ports/SkFontHost_FreeType_common.h"
 
 class SkFontDescriptor;
diff --git a/src/ports/SkFontHost_FreeType.cpp b/src/ports/SkFontHost_FreeType.cpp
index 7f35ef7..b838012 100644
--- a/src/ports/SkFontHost_FreeType.cpp
+++ b/src/ports/SkFontHost_FreeType.cpp
@@ -27,7 +27,6 @@
 #include "src/core/SkMaskGamma.h"
 #include "src/core/SkScalerContext.h"
 #include "src/core/SkTSearch.h"
-#include "src/ports/SkFontHost_FreeType_common.h"
 #include "src/sfnt/SkOTUtils.h"
 #include "src/utils/SkCallableTraits.h"
 #include "src/utils/SkMatrix22.h"
@@ -42,6 +41,7 @@
 #ifdef FT_COLOR_H  // 2.10.0
 #   include <freetype/ftcolor.h>
 #endif
+#include "src/ports/SkFontHost_FreeType_common.h"
 #include <freetype/freetype.h>
 #include <freetype/ftlcdfil.h>
 #include <freetype/ftmodapi.h>
diff --git a/src/ports/SkFontHost_FreeType_common.cpp b/src/ports/SkFontHost_FreeType_common.cpp
index db5dd28..24b14da 100644
--- a/src/ports/SkFontHost_FreeType_common.cpp
+++ b/src/ports/SkFontHost_FreeType_common.cpp
@@ -14,7 +14,6 @@
 #include "include/private/SkColorData.h"
 #include "include/private/SkTo.h"
 #include "src/core/SkFDot6.h"
-#include "src/ports/SkFontHost_FreeType_common.h"
 
 #include <utility>
 
@@ -24,6 +23,7 @@
 #ifdef FT_COLOR_H
 #   include <freetype/ftcolor.h>
 #endif
+#include "src/ports/SkFontHost_FreeType_common.h"
 #include <freetype/ftimage.h>
 #include <freetype/ftoutln.h>
 #include <freetype/ftsizes.h>
@@ -1234,6 +1234,42 @@ bool colrv1_start_glyph_bounds(SkMatrix *ctm,
 
 }  // namespace
 
+/*
+ * This content is mostly just
+ *       SkTypeface_FreeType::FaceRec::setupPalette()
+ +     + SkScalerContext_FreeType_Base::drawCOLRv1Glyph()
+ +*/
+bool SkScalerContext_FreeType_Base::skia_colrv1_start_glyph(SkCanvas* canvas,
+                                    FT_Face face,
+                                    uint16_t glyphId,
+                                    FT_UShort palette_index,
+                                    FT_Color_Root_Transform rootTransform
+                                    ) {
+    uint32_t fForegroundColor{SK_ColorBLACK};
+    FT_Palette_Data paletteData;
+    FT_Palette_Data_Get(face, &paletteData);
+
+    FT_Color* ftPalette = nullptr;
+    FT_Palette_Select(face, palette_index, &ftPalette);
+    std::unique_ptr<SkColor[]> ptr_palette(new SkColor[paletteData.num_palette_entries]);
+    for (int i = 0; i < paletteData.num_palette_entries; ++i) {
+      ptr_palette[i] = SkColorSetARGB(ftPalette[i].alpha,
+                                  ftPalette[i].red,
+                                  ftPalette[i].green,
+                                  ftPalette[i].blue);
+    }
+    SkSpan<SkColor> palette(ptr_palette.get(), paletteData.num_palette_entries);
+
+    VisitedSet activePaints;
+    bool haveLayers =  colrv1_start_glyph(canvas, palette,
+                                          fForegroundColor, // FT_Palette_Get_Foreground_Color?
+                                          face, glyphId,
+                                          FT_COLOR_INCLUDE_ROOT_TRANSFORM,
+                                          &activePaints);
+    SkASSERTF(haveLayers, "Could not get COLRv1 layers from '%s'.", face->family_name);
+    return haveLayers;
+}
+
 void SkScalerContext_FreeType_Base::generateGlyphImage(
     FT_Face face,
     const SkGlyph& glyph,
diff --git a/src/ports/SkFontHost_FreeType_common.h b/src/ports/SkFontHost_FreeType_common.h
index 5e6539f..8eac525 100644
--- a/src/ports/SkFontHost_FreeType_common.h
+++ b/src/ports/SkFontHost_FreeType_common.h
@@ -24,6 +24,7 @@ typedef struct FT_FaceRec_* FT_Face;
 typedef struct FT_StreamRec_* FT_Stream;
 typedef signed long FT_Pos;
 typedef struct FT_BBox_ FT_BBox;
+typedef unsigned short  FT_UShort; /* freetype/fttypes.h */
 
 
 #ifdef SK_DEBUG
@@ -36,7 +37,15 @@ const char* SkTraceFtrGetError(int);
 #endif
 
 
-class SkScalerContext_FreeType_Base : public SkScalerContext {
+class SK_SPI SkScalerContext_FreeType_Base : public SkScalerContext {
+public:
+    bool computeColrV1GlyphBoundingBox(FT_Face face, SkGlyphID glyphID, FT_BBox* boundingBox);
+    static bool skia_colrv1_start_glyph(SkCanvas* canvas,
+                                        FT_Face face,
+                                        uint16_t glyphId,
+                                        FT_UShort palette_index,
+                                        FT_Color_Root_Transform rootTransform
+                                        );
 protected:
     // See http://freetype.sourceforge.net/freetype2/docs/reference/ft2-bitmap_handling.html#FT_Bitmap_Embolden
     // This value was chosen by eyeballing the result in Firefox and trying to match it.
@@ -58,7 +67,6 @@ protected:
     // Note : This method may change the configured size and transforms on FT_Face. Make sure to
     // configure size, matrix and load glyphs as needed after using this function to restore the
     // state of FT_Face.
-    bool computeColrV1GlyphBoundingBox(FT_Face face, SkGlyphID glyphID, FT_BBox* boundingBox);
 
 private:
     using INHERITED = SkScalerContext;
diff --git a/src/ports/SkFontMgr_android.cpp b/src/ports/SkFontMgr_android.cpp
index 3ef7e10..704c49b 100644
--- a/src/ports/SkFontMgr_android.cpp
+++ b/src/ports/SkFontMgr_android.cpp
@@ -23,6 +23,8 @@
 #include "src/core/SkOSFile.h"
 #include "src/core/SkTSearch.h"
 #include "src/core/SkTypefaceCache.h"
+enum class FT_Color_Root_Transform_;
+typedef FT_Color_Root_Transform_ FT_Color_Root_Transform; /* freetype/ftcolor.h */
 #include "src/ports/SkFontHost_FreeType_common.h"
 #include "src/ports/SkFontMgr_android_parser.h"
 
diff --git a/src/ports/SkFontMgr_custom.cpp b/src/ports/SkFontMgr_custom.cpp
index 695c04d..70da0a2 100644
--- a/src/ports/SkFontMgr_custom.cpp
+++ b/src/ports/SkFontMgr_custom.cpp
@@ -16,6 +16,8 @@
 #include "include/private/SkTArray.h"
 #include "include/private/SkTemplates.h"
 #include "src/core/SkFontDescriptor.h"
+enum class FT_Color_Root_Transform_;
+typedef FT_Color_Root_Transform_ FT_Color_Root_Transform; /* freetype/ftcolor.h */
 #include "src/ports/SkFontHost_FreeType_common.h"
 #include "src/ports/SkFontMgr_custom.h"
 
diff --git a/src/ports/SkFontMgr_custom.h b/src/ports/SkFontMgr_custom.h
index 8a70c6e..d74b262 100644
--- a/src/ports/SkFontMgr_custom.h
+++ b/src/ports/SkFontMgr_custom.h
@@ -14,6 +14,8 @@
 #include "include/core/SkString.h"
 #include "include/core/SkTypes.h"
 #include "include/private/SkTArray.h"
+enum class FT_Color_Root_Transform_;
+typedef FT_Color_Root_Transform_ FT_Color_Root_Transform; /* freetype/ftcolor.h */
 #include "src/ports/SkFontHost_FreeType_common.h"
 
 class SkData;
diff --git a/src/ports/SkFontMgr_fontconfig.cpp b/src/ports/SkFontMgr_fontconfig.cpp
index 1a14168..c6d8873 100644
--- a/src/ports/SkFontMgr_fontconfig.cpp
+++ b/src/ports/SkFontMgr_fontconfig.cpp
@@ -22,6 +22,8 @@
 #include "src/core/SkFontDescriptor.h"
 #include "src/core/SkOSFile.h"
 #include "src/core/SkTypefaceCache.h"
+enum class FT_Color_Root_Transform_;
+typedef FT_Color_Root_Transform_ FT_Color_Root_Transform; /* freetype/ftcolor.h */
 #include "src/ports/SkFontHost_FreeType_common.h"
 
 #include <fontconfig/fontconfig.h>
